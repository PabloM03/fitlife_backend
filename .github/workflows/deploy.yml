name: ðŸš€ Deploy backend en Tomcat

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) Clonar el repositorio
      - name: Checkout
        uses: actions/checkout@v3

      # 2) Configurar Java 21
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '21'

      # 3) Cache de dependencias Maven
      - name: Cache Maven deps
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      # 4) Compilar el WAR
      - name: Build WAR
        run: |
          cd fitlife
          mvn -B clean package -DskipTests

      # 5) Desplegar en el servidor remoto
      - name: Deploy to remote Tomcat
        env:
          SSH_KEY:     ${{ secrets.SERVER_SSH_KEY }}
          SERVER_IP:   ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          # Iniciar ssh-agent y cargar la clave privada
          eval "$(ssh-agent -s)"
          printf '%s\n' "$SSH_KEY" | ssh-add -

          # AÃ±adir servidor a known_hosts para evitar verificaciÃ³n manual
          mkdir -p ~/.ssh
          ssh-keyscan -H "$SERVER_IP" >> ~/.ssh/known_hosts

          # Copiar el WAR al home del usuario remoto
          scp fitlife/target/fitlife.war "$SERVER_USER@$SERVER_IP:~/fitlife.war"

          # Mover el WAR a Tomcat y reiniciar el servicio
          ssh "$SERVER_USER@$SERVER_IP" << 'EOF'
            sudo mv ~/fitlife.war /opt/tomcat/webapps/ROOT.war
            sudo systemctl restart tomcat
          EOF
